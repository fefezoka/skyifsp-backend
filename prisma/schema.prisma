generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./ERD.png"
}

model User {
  id        String   @id @default(uuid()) @map("_id")
  email     String   @unique
  name      String
  password  String
  birthdate DateTime
  createdAt DateTime @default(now())
}

model Airplane {
  id      String      @id @default(uuid()) @map("_id")
  code    String      @unique
  seats   Int
  plane   String
  flights FlightLeg[]
}

model Airport {
  id                String      @id @default(uuid()) @map("_id")
  code              String      @unique
  country           String
  countryCode       String
  city              String
  airport           String
  latitude          Float
  longitude         Float
  outwardFlightLeg  FlightLeg[] @relation("outward")
  outboundFlightLeg FlightLeg[] @relation("outbound")
}

model Flight {
  id            String      @id @default(uuid()) @map("_id")
  departureDate DateTime
  arrivalDate   DateTime
  flightLegs    FlightLeg[]
}

model FlightLeg {
  id            String   @id @default(uuid()) @map("_id")
  departureDate DateTime
  arrivalDate   DateTime
  origin        Airport  @relation("outward", fields: [originId], references: [id], onDelete: Cascade)
  destination   Airport  @relation("outbound", fields: [destinationId], references: [id], onDelete: Cascade)
  airplane      Airplane @relation(fields: [airplaneId], references: [id], onDelete: Cascade)
  flight        Flight   @relation(fields: [flightId], references: [id], onDelete: Cascade)
  originId      String
  destinationId String
  airplaneId    String
  flightId      String
}
